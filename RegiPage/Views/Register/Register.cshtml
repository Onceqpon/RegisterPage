@model RegiPage.Models.User

@{
    ViewBag.Title = "Register";
}

@using (Html.BeginForm("Register", "Register", FormMethod.Post, new { name = "myForm", onsubmit = "return validateForm();" }))
{
    @Html.ValidationSummary(false, "", new {@class = "text-danger"})
    <div class="container">
        <h1>Rejestracja</h1>
        <hr>
        <b>
            <p>Imię: @Html.TextBoxFor(a => a.Firstname, new{type = "text" })</p>
            <p>Nazwisko: @Html.TextBoxFor(a => a.Lastname, new{type = "text" })</p>
            <p>Email: @Html.TextBoxFor(a => a.Email, new{type = "text" })</p>
            <p>Hasło: @Html.TextBoxFor(a => a.Password, new{type = "password" })</p>
            <p>Powtórz hasło: @Html.TextBoxFor(a => a.ConfirmPassword, new{type = "password" })</p>
            <p>Podaj swój wiek: @Html.TextBoxFor(a => a.Age, new { @class = "form-control", type = "number" })</p>
            <p>Numer telefonu (+48): @Html.TextBoxFor(a => a.phoneNumber, new { @class = "Text" })</p>
            <p>Wybierz swoje miasto: @Html.DropDownListFor(model => model.City, new SelectList(Enum.GetValues(typeof(User.Cities))), "Wybierz")</p>
        </b>
    </div>

    <input type="submit" class="btn" value="Zarejestruj">
    <input type="reset" class="btn" value="Wyczyść">
}

<style>
    * {
        box-sizing: border-box
    }

    /* Add padding to containers */
    .container {
        padding-left: 100px;
        padding-right: 100px;
    }

    /* Full-width input fields */
    input[type=text], input[type=password] {
        width: 100%;
        padding: 15px;
        margin: 5px 0 22px 0;
        display: inline-block;
        border: none;
        background: #f1f1f1;
    }

    input[type=text]:focus, input[type=password]:focus {
        background-color: #ddd;
        outline: none;
     }

    /* Overwrite default styles of hr */
    hr {
        border: 1px solid #f1f1f1;
        margin-bottom: 25px;
    }

    /* Set a style for the submit/register button */
    .btn {
        background-color: #04AA6D;
        color: white;
        padding: 16px 20px;
        margin: 8px 0;
        border: none;
        cursor: pointer;
        width: 49%;
        opacity: 0.9;
    }

        .registerbtn:hover {
            opacity: 1;
        }

    /* Add a blue text color to links */
    a {
        color: dodgerblue;
    }

    /* Set a grey background color and center the text of the "sign in" section */
    .signin {
        background-color: #f1f1f1;
        text-align: center;
    }
</style>

<script>
function validateForm() {
    var firstName = document.forms["myForm"]["Firstname"].value;
    var lastName = document.forms["myForm"]["Lastname"].value;
    var email = document.forms["myForm"]["Email"].value;
    var password = document.forms["myForm"]["Password"].value;
    var confirmPassword = document.forms["myForm"]["ConfirmPassword"].value;
    var age = document.forms["myForm"]["Age"].value;
    var city = document.forms["myForm"]["City"].value;

    // Walidacja imienia
    if (firstName === "") {
        alert("Proszę wprowadzić imię.");
        return false;
    }

    // Walidacja nazwiska
    if (lastName === "") {
        alert("Proszę wprowadzić nazwisko.");
        return false;
    }

    // Walidacja emaila
    if (email === "") {
        alert("Proszę wprowadzić adres e-mail.");
        return false;
    } else if (!isValidEmail(email)) {
        alert("Proszę wprowadzić poprawny adres e-mail.");
        return false;
    }

    // Walidacja hasła
    if (password === "") {
        alert("Proszę wprowadzić hasło.");
        return false;
    } else if (password.length < 8) {
        alert("Hasło musi mieć co najmniej 8 znaków.");
        return false;
    } else if (!/[a-z]/.test(password) || !/[A-Z]/.test(password) || !/\d/.test(password)) {
        alert("Hasło musi zawierać co najmniej jedną małą literę, jedną dużą literę i jedną cyfrę.");
        return false;
    }

    // Walidacja potwierdzenia hasła
    if (confirmPassword !== password) {
        alert("Potwierdzenie hasła nie jest zgodne z hasłem.");
        return false;
    }

    // Walidacja wieku
    if (age === "" || isNaN(age) || age < 11 || age > 80) {
        alert("Proszę wprowadzić wiek od 11 do 80 lat.");
        return false;
    }

    // Walidacja miasta
    if (city === "0") {
        alert("Proszę wybrać miasto.");
        return false;
    }

    return true;
}

function isValidEmail(email) {
    var regex = /^[a-zA-Z0-9._-]+[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}/;
    return regex.test(email);
}
</script>

